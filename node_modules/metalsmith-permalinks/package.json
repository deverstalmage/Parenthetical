{
  "name": "metalsmith-permalinks",
  "description": "A metalsmith plugin for permalinks.",
  "repository": {
    "type": "git",
    "url": "git://github.com/segmentio/metalsmith-permalinks.git"
  },
  "version": "0.3.0",
  "license": "MIT",
  "main": "lib/index.js",
  "dependencies": {
    "slug-component": "~1.1.0",
    "debug": "~0.7.4",
    "substitute": "git://github.com/segmentio/substitute#0.0.1",
    "moment": "^2.5.1"
  },
  "devDependencies": {
    "mocha": "1.x",
    "metalsmith": "0.x",
    "assert-dir-equal": "0.0.1"
  },
  "readme": "\n# metalsmith-permalinks\n\n  A Metalsmith plugin that applies a custom permalink pattern to files, and renames them so that they're nested properly for static sites (converting `about.html` into `about/index.html`).\n\n## Installation\n\n    $ npm install metalsmith-permalinks\n\n## Usage\n\n```js\nvar Metalsmith = require('metalsmith');\nvar permalinks = require('metalsmith-permalinks');\n\nvar metalsmith = new Metalsmith(__dirname)\n  .use(permalinks({\n    pattern: ':title'\n  }));\n```\n\n  The `pattern` can contain a reference to any piece of metadata associated with the file by using the `:PROPERTY` syntax for placeholders.\n\n  If no pattern is provided, the files won't be remapped, but the `path` metadata key will still be set, so that you can use it for outputting links to files in the template.\n\n#### Dates\n\n  By default any date will be converted to a `YYYY/MM/DD` format when using in a permalink pattern, but you can change the conversion by passing a `date` option:\n\n```js\nmetalsmith.use(permalinks({\n  pattern: ':date/:title',\n  date: 'YYYY'\n}));\n```\n  \n  It uses [moment.js](http://momentjs.com/docs/#/displaying/format/) to format the string.\n\n#### Relative Files\n\n  When this plugin rewrites your files to be permalinked properly, it will also duplicate sibling files so that relative links like `/images/cat.gif` will be preserved nicely. You can turn this feature off by setting the `relative` option to `false`.\n\n  For example for this source directory:\n\n    src/\n      css/\n        style.css\n      post.html\n\n  Here's what the build directory would look like with `relative` on:\n\n    build/\n      post/\n        index.html\n        css/\n          style.css\n      css/\n        style.css\n\n  And here's with `relative` off:\n\n    build/\n      post/\n        index.html\n      css/\n        style.css\n\n#### CLI\n\n  You can also use the plugin with the Metalsmith CLI by adding a key to your `metalsmith.json` file:\n\n```json\n{\n  \"plugins\": {\n    \"metalsmith-permalinks\": {\n      \"pattern\": \":title\"\n    }\n  }\n}\n```\n\n## License\n\n  MIT\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/segmentio/metalsmith-permalinks/issues"
  },
  "homepage": "https://github.com/segmentio/metalsmith-permalinks",
  "_id": "metalsmith-permalinks@0.3.0",
  "dist": {
    "shasum": "751ec37b20445df7c8c0c585ceca454b4f4b3647"
  },
  "_resolved": "git+https://github.com/segmentio/metalsmith-permalinks.git#bb56589ba28bff4058c9cd4f6606f1a1e1b8f4e5",
  "_from": "git+https://github.com/segmentio/metalsmith-permalinks.git"
}
